"use strict";

var mongoose = require('mongoose');
var _ = require('underscore');

var Schema = mongoose.Schema({
    id: {
        type: String,
        required: true,
        unique: true
    },
    account: {
        player: {
            icon: String,
            mostplay: String,
            position: {
                offense: Boolean,
                defense: Boolean,
                support: Boolean
            },
            overlog_link: String
        },
        security: {
            account_type: {
                type: Number,
                default: 1
            },
            password: String,
            md5_password: String,
            savepassword: Boolean,
        },
        notify: {

        }
    },
    competitive: {
        score: Number,
        max_score: Number,
        tier: String,
        tier_name: String,
        level: Number,
    },
    league: {
        s01: {
            team: {
                type: Number,
                default: 0
            },
            accepted: {
                type: Boolean,
                default: false
            },
            point: Number,
        },
        s02: {
            team: {
                type: Number,
                default: 0
            },
            accepted: {
                type: Boolean,
                default: false
            },
            point: Number,
        }
    },
}, {
    timestamps: true
});

// Schema.methods.findSimilarTypes = function (cb) {
//     return this.model('Members').find({
//         id: this.id
//     }, cb);
// };
Schema.statics.get = function (username) {
    return this.findOne({
        id: username
    }).exec()
    // return new Promise((resolve, reject) => {
    //     this.findOne({
    //         id: username
    //     }).then(resolve).catch(reject);
    // })
}

Schema.methods.verify = function (password) {
    var md5 = require('md5');
    let enc_password = md5(password);
    return _.isEqual(this.account.security.md5_password, enc_password);
}

module.exports = mongoose.model("Members", Schema);