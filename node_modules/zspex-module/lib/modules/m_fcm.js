"use strict";

var FCM = require('../Schema/fcmSchema.js');

let FcmProvider = function () {

    var self = this;

    self.get = function (token) {
        return new Promise((resolve, reject) => {
            FCM.findOne({
                    $or: [{
                            token: token
                        },
                        {
                            id: token
                        },
                    ]
                }).then(Token => {
                    resolve(Token);
                })
                .catch(reject);
        });
    }

    self.getAllById = function (id) {
        return new Promise((resolve, reject) => {
            FCM.find({
                    id: id
                }).then(Token => {
                    resolve(Token);
                })
                .catch(reject);
        });
    }


    self.create = function (token) {
        return new Promise((resolve, reject) => {
            FCM.count({
                    token: token
                })
                .then(count => {
                    if (count == 0) {
                        resolve(new FCM({
                            token: token
                        }));
                    } else reject();
                })
                .catch(reject);
        });
    }


    self.save = function (instance) {
        return new Promise((resolve, reject) => {
            if (instance === null) {
                reject({});
            }
            instance.save(function (err, s) {
                if (err) reject(err);
                resolve(s);
            });
        });
    }

}
module.exports = new FcmProvider();